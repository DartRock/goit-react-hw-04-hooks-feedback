{"version":3,"sources":["components/Section/Section.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/StatisticsItem/StatisticsItem.jsx","components/Statistics/Statistics.jsx","App.js","index.js"],"names":["Section","title","children","FeedbackOptions","options","onLeaveFeedback","Object","keys","map","option","type","onClick","StatisticsItem","value","Statistics","good","neutral","bad","total","positivePercentage","App","useState","setGood","setNeutral","setBad","countTotalFeedback","prevState","Math","ceil","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAEaA,EAAU,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,MAAOC,EAAc,EAAdA,SAC5B,OACA,oCACE,6BAAKD,IACJC,MCJMC,EAAkB,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAEvC,OACI,8BACKC,OAAOC,KAAKH,GAASI,KAAI,SAACC,GAAD,OACtB,wBAEAC,KAAK,SACLC,QAAS,kBAAMN,EAAgBI,IAH/B,SAKCA,GAJIA,SCPRG,EAAiB,SAAC,GAAoB,IAAnBX,EAAkB,EAAlBA,MAAOY,EAAW,EAAXA,MACnC,OAAQ,mCAAK,8BAAIZ,EAAJ,KAAY,+BAAOY,WCCvBC,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBACpD,OACI,qCACI,4CACCD,EAAQ,+BACL,cAAC,EAAD,CAAgBjB,MAAM,OAAOY,MAAOE,IACpC,cAAC,EAAD,CAAgBd,MAAM,UAAUY,MAAOG,IACvC,cAAC,EAAD,CAAgBf,MAAM,MAAMY,MAAOI,IACnC,cAAC,EAAD,CAAgBhB,MAAM,QAAQY,MAAOK,IACrC,cAAC,EAAD,CAAgBjB,MAAM,oBAAoBY,OAAQM,GAA0C,GAAK,SAC7F,wBC4CLC,G,MAnDH,WACV,MAAwBC,mBAAS,GAAjC,mBAAON,EAAP,KAAaO,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOL,EAAP,KAAgBO,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOJ,EAAP,KAAYO,EAAZ,KAqBMC,EAAqB,WACzB,OAAOV,EAAOC,EAAUC,GAO1B,OACE,mCACE,eAAC,EAAD,CAAShB,MAAM,wBAAf,UACE,cAAC,EAAD,CACEG,QAAS,CAAEW,OAAMC,UAASC,OAC1BZ,gBAhCgB,SAAAI,GACtB,OAAQA,GACN,IAAK,OACHa,GAAQ,SAAAI,GAAS,OAAIA,EAAY,KACjC,MAEF,IAAK,UACHH,GAAW,SAAAG,GAAS,OAAIA,EAAY,KACpC,MAEF,IAAK,MACHF,GAAO,SAAAE,GAAS,OAAIA,EAAY,SAuBhC,cAAC,EAAD,CACEX,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOO,IACPN,mBAfCQ,KAAKC,KAAMb,EAAOU,IAAwB,c,YC7BrDI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.452317e1.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\r\n\r\nexport const Section = ({title, children}) => {\r\n    return (\r\n    <section>\r\n      <h1>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node\r\n}","import PropTypes from 'prop-types'\r\n\r\nexport const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n    \r\n    return (\r\n        <div>\r\n            {Object.keys(options).map((option) => (\r\n                <button\r\n                key={option}\r\n                type=\"button\"\r\n                onClick={() => onLeaveFeedback(option)}\r\n                >\r\n                {option}\r\n                </button>\r\n            ))}\r\n        </div>\r\n    )\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n    option: PropTypes.object,\r\n    onLeaveFeedback: PropTypes.func\r\n}","\r\nexport const StatisticsItem = ({title, value}) => {\r\n    return (<li> <p>{title}: <span>{value}</span></p></li> )\r\n}\r\n","import { StatisticsItem } from \"./StatisticsItem/StatisticsItem\"\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n    return  (\r\n        <>  \r\n            <h2>Statistics</h2>\r\n            {total ? <ul>\r\n                <StatisticsItem title=\"Good\" value={good}/>\r\n                <StatisticsItem title=\"Neutral\" value={neutral}/>\r\n                <StatisticsItem title=\"Bad\" value={bad}/>\r\n                <StatisticsItem title=\"Total\" value={total}/>\r\n                <StatisticsItem title=\"Positive feedback\" value={(positivePercentage ? positivePercentage : 0) + '%'}/>\r\n            </ul> : 'No feedback given'}\r\n        </>\r\n    )\r\n}\r\n\r\nStatistics.propTypes = {\r\n    good: PropTypes.number,\r\n    neutral: PropTypes.number,\r\n    bad: PropTypes.number,\r\n    total: PropTypes.number,\r\n    positivePercentage: PropTypes.number,\r\n}","import { useState } from 'react';\nimport { Section } from './components/Section/Section';\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\nimport { Statistics } from './components/Statistics/Statistics';\nimport './App.css';\n\nconst App = () => {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const feedbackHandler = option => {\n    switch (option) {\n      case 'good':\n        setGood(prevState => prevState + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevState => prevState + 1);\n        break;\n\n      case 'bad':\n        setBad(prevState => prevState + 1);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    return Math.ceil((good / countTotalFeedback()) * 100);\n  };\n\n  return (\n    <>\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={feedbackHandler}\n        />\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback()}\n          positivePercentage={countPositiveFeedbackPercentage()}\n        />\n      </Section>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}